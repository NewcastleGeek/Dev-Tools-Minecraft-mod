// this part adds in ForgeGradle
buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies { classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT' }
}

apply plugin: "forge"

// stuff specific to my mod
group = 'info.ppservers.devtool'
version = "0.0.1"
archivesBaseName = 'devtools'

minecraft {
    version = "1.7.2-10.12.1.1061" // grab latest forge
    assetDir = "run/assets"

    // replacing
    replace "@CHANGE_VERSION@", "[0.0.1,)"
    replace "@MC_VERSION@", project.minecraft.version
    replace "@VERSION@", project.version
    //replaceIn "SecretRoomsMod.java"
}

// add some stuff to the version
// spit out the version for debugging sake
logger.lifecycle ""+version
version = "${minecraft.version}-$version.${System.getenv().BUILD_NUMBER}"
logger.lifecycle ""+version

processResources
{
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in text files, not binary ones.
    from(sourceSets.main.resources.srcDirs) {
        include '**/*.info'

        // replace version and MCVersion
        // forge version is also accessible via project.minecraftforgeVersion
        // it contains the full minecraft version, including buildNumber
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else, thats not text
    from(sourceSets.main.resources.srcDirs) { exclude '**/*.info' }
}


// because the normal output has been made to be obfuscated
task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'dev'
}

// add a source jar
task sourceJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

// add a javadoc jar
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

// deployement stuff

configurations { deployerJars }

dependencies { deployerJars "org.apache.maven.wagon:wagon-ssh:2.2" }

artifacts {
    archives sourceJar
    archives deobfJar
    archives javadocJar
}

